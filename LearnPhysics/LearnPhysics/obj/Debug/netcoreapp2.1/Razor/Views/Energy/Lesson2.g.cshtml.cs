#pragma checksum "C:\Users\Giles\Source\Repos\giles-king-pg\Proj516\LearnPhysics\LearnPhysics\Views\Energy\Lesson2.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "5ecba4c3862f113ece6b327411d6038eee8a2080"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Energy_Lesson2), @"mvc.1.0.view", @"/Views/Energy/Lesson2.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Energy/Lesson2.cshtml", typeof(AspNetCore.Views_Energy_Lesson2))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\Giles\Source\Repos\giles-king-pg\Proj516\LearnPhysics\LearnPhysics\Views\_ViewImports.cshtml"
using LearnPhysics;

#line default
#line hidden
#line 2 "C:\Users\Giles\Source\Repos\giles-king-pg\Proj516\LearnPhysics\LearnPhysics\Views\_ViewImports.cshtml"
using LearnPhysics.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"5ecba4c3862f113ece6b327411d6038eee8a2080", @"/Views/Energy/Lesson2.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"828bbca8e87de67beef73567d068a87c435efa0b", @"/Views/_ViewImports.cshtml")]
    public class Views_Energy_Lesson2 : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/images/topics/energy/lesson2/action-energy-alone-endurance-2284163.jpg"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("style", new global::Microsoft.AspNetCore.Html.HtmlString("width: 640px; height:399px;"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("alt", new global::Microsoft.AspNetCore.Html.HtmlString("Photo of a volleyball player"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-area", "", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-controller", "Energy", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-action", "EnergyIndex", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 2 "C:\Users\Giles\Source\Repos\giles-king-pg\Proj516\LearnPhysics\LearnPhysics\Views\Energy\Lesson2.cshtml"
  
    ViewData["Title"] = "Lesson 2";

#line default
#line hidden
            BeginContext(46, 2660, true);
            WriteLiteral(@"<br />

<h2 style=""text-align: center; margin-top:80px;""><u>Lesson 2: Stores of energy</u></h2>

<br />

<div class=""container"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">

    <ul class=""nav nav-tabs"">
        <li class=""nav-item"">
            <a class=""nav-link active"" data-toggle=""tab"" href=""#intro"">Intro</a>
        </li>
        <li class=""nav-item"">
            <a class=""nav-link"" data-toggle=""tab"" href=""#part1"">1</a>
        </li>
        <li class=""nav-item"">
            <a class=""nav-link"" data-toggle=""tab"" href=""#part2"">2</a>
        </li>
        <li class=""nav-item"">
            <a class=""nav-link"" data-toggle=""tab"" href=""#part3"">3</a>
        </li>
        <li class=""nav-item"">
            <a class=""nav-link"" data-toggle=""tab"" href=""#part4"">4</a>
        </li>
        <li class=""nav-item"">
            <a class=""nav-link"" data-toggle=""tab"" href=""#part5"">5</a>
        </li>
        <li class=""nav-item"">
            <a class=""nav-link"" dat");
            WriteLiteral(@"a-toggle=""tab"" href=""#summary"">Summary</a>
        </li>
    </ul>

    <div id=""myTabContent"" class=""tab-content"">

        <!-- INTRO -->
        <div class=""tab-pane fade active show"" id=""intro"">
            <br />
            <p>
                When we talk about energy, we often say it is ‘burnt’, especially when talking about exercise.
            </p>
            <p>
                This is not actually true; remember in Lesson 1 we said energy cannot be created or destroyed. Instead it moves from one ‘store’ to another ‘store’.
            </p>
            <p>
                A good example in the case of exercise would be the human body acting as a store of energy. Energy is stored in the;
            </p>
            <ul>
                <li>
                    liver;
                </li>
                <li>
                    muscles;
                </li>
                <li>
                    and fats.
                </li>
            </ul>
            <p>
  ");
            WriteLiteral(@"              As you exercise, your muscles are doing work, your body is getting warmer, breathing becomes heavier, the heart is beating faster and you are moving.
                The body begins to use sugars in the blood as energy, then moves on to stored energy in the muscles and eventually converts fat cells into a form of useable energy.
            </p>
            <div class=""row justify-content-center"">
                <div class=""card text-white bg-dark mb-3"">
                    <div class=""card-body"">
                        <figure style=""margin-bottom:0em"">
                            ");
            EndContext();
            BeginContext(2706, 157, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "cc6bba5c7578442db3557d65a0226382", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(2863, 10434, true);
            WriteLiteral(@"
                            <figcaption>Photo by Maarten van den Heuvel from Pexels</figcaption>
                        </figure>
                    </div>
                </div>
            </div>
            <p>
                Physicists explain this in a slightly different way. There are nine different ‘stores’ of energy. The ones explained in the exercise example above are chemical,
                thermal, and kinetic energy stores.
            </p>
        </div>


        <!-- PART 1 -->
        <div class=""tab-pane fade"" id=""part1"">
            <br />
            <p><strong> Stores of energy</strong></p>
            <br />
            <table class=""table-bordered table-primary"">
                <tr>
                    <th scope=""row"" class=""text-center"">Store</th>
                    <th scope=""row"" class=""text-center"">Description</th>
                    <th scope=""row"" class=""text-center"">Example</th>
                </tr>
                <tr class=""table-secondary"">
  ");
            WriteLiteral(@"                  <td><b>Chemical</b></td>
                    <td>
                        The energy stored in molecules and released during chemical reactions.
                    </td>
                    <td>
                        Food, muscles and fat cells, electrical batteries and fuel sources like wood or petrol.
                    </td>
                </tr>
                <tr class=""table-primary"">
                    <td><b>Thermal</b></td>
                    <td>
                        The energy contained within an object. The more energy an object stores, the hotter it is.
                    </td>
                    <td>
                        Hot drinks and fires have lots of energy, while ice has very little energy.
                    </td>
                </tr>
                <tr class=""table-secondary"">
                    <td><b>Kinetic</b></td>
                    <td>
                        The energy of a moving object. The higher the mass and speed, the ");
            WriteLiteral(@"more energy an object will have.
                    </td>
                    <td>
                        A running animal, lorry or asteroid have varying kinetic energy stores.
                    </td>
                </tr>
            </table>
        </div>

        <!-- PART 2 -->
        <div class=""tab-pane fade"" id=""part2"">
            <br />
            <p><strong> Nuclear, light, gravity and elastic energy</strong></p>

            <br />
            <p>
                Other common examples are nuclear energy, light energy, gravitational potential
                energy and elastic potential energy.
            </p>

            <p>
                Nuclear is fairly self-explanatory; we have power stations that harness nuclear
                power sources to generate electricity.
            </p>

            <p>
                Light energy is usually given off by objects that are already very hot. The Sun
                is obviously very hot, but so are lightbulbs a");
            WriteLiteral(@"nd even 'red-hot' metals when
                they're placed in a blacksmiths forge.
            </p>

            <p>
                The next two are called ‘potential’ because you can store the energy that may
                never get used. For instance, an apple growing high up on a tree has gravity
                pulling it down, but until the apple falls from the tree, that energy isn’t used.
                The same can be said for you going to the top of a skyscraper; you contain potential
                energy, but by going back down to the ground floor, that energy is reduced.
            </p>

            <p>
                The same can be said for elastic potential – winding up an elastic band stores energy
                but unless it is let go, the energy is still stored inside the elastic band.
            </p>

        </div>

        <!-- PART 3 -->
        <div class=""tab-pane fade"" id=""part3"">
            <br />
            <p><strong> More stores of energy</stron");
            WriteLiteral(@"g></p>
            <br />
            <table class=""table-bordered table-primary"">
                <tr>
                    <th scope=""row"" class=""text-center"">Store</th>
                    <th scope=""row"" class=""text-center"">Description</th>
                    <th scope=""row"" class=""text-center"">Example</th>
                </tr>
                <tr class=""table-secondary"">
                    <td><b>Nuclear</b></td>
                    <td>
                        The energy stored within an atom.
                    </td>
                    <td>
                        Uranium fuel rods, nuclear reactors and atomic bombs.
                    </td>
                </tr>
                <tr class=""table-primary"">
                    <td><b>Light</b></td>
                    <td></td>
                    <td></td>
                </tr>
                <tr class=""table-secondary"">
                    <td><b>Gravitational potential</b></td>
                    <td>
                  ");
            WriteLiteral(@"      The energy of an increases with its height from the Earth’s surface.
                    </td>
                    <td>
                        A helicopter or aeroplane would have more g.p.e. when flying over one that’s grounded.
                    </td>
                </tr>
                <tr class=""table-primary"">
                    <td><b>Elastic potential</b></td>
                    <td>
                        The energy stored in a stretched or squashed object.
                    </td>
                    <td>
                        Squeezing a tennis ball or stretching an elastic band or spring.
                    </td>
                </tr>
            </table>
        </div>

        <!-- PART 4 -->
        <div class=""tab-pane fade"" id=""part4"">
            <br />
            <p><strong> Less common stores of energy</strong></p>
            <br />
            <p>
                There are other stores of energy that we may interact with on a daily basis but neve");
            WriteLiteral(@"r really acknowledge, or are more abstract.
            </p>
            <p>
                These are electrostatic and magnetic energy stores.
            </p>
            <p>
                Electrostatic energy is commonly known as a spark of electricity, such as when you touch a supermarket trolley and get a ‘static’
                shock, or when lightning occurs.
            </p>
            <p>
                Common knowledge around magnets is that opposites poles attract, whilst like poles repel. Forcing like poles together requires
                energy, and therefore magnetic energy is stored. The same can be said when pulling attracting poles apart – they store magnetic
                energy to try and pull them together again.
            </p>
        </div>

        <!-- PART 5 -->
        <div class=""tab-pane fade"" id=""part5"">
            <br />
            <p><strong> More stores of energy</strong></p>
            <br />
            <table class=""table-bordered table-pr");
            WriteLiteral(@"imary"">
                <tr>
                    <th scope=""row"" class=""text-center"">Store</th>
                    <th scope=""row"" class=""text-center"">Description</th>
                    <th scope=""row"" class=""text-center"">Example</th>
                </tr>
                <tr class=""table-secondary"">
                    <td><b>Electrostatic</b></td>
                    <td>
                        The forces that electric charges exert on one another.
                    </td>
                    <td>
                        Thunderclouds, Van de Graaf generators, slippers dragged across a carpet.
                    </td>
                </tr>
                <tr class=""table-primary"">
                    <td><b>Magnetic</b></td>
                    <td>
                        Energy stored when moving magnets relative to one another.
                    </td>
                    <td>
                        Fridges and fridge magnets, and compasses use magnetic energy.
            ");
            WriteLiteral(@"        </td>
                </tr>
            </table>
        </div>

        <!-- PART 6 - Summary -->
        <div class=""tab-pane fade"" id=""summary"">
            <br />
            <p><strong> Summary</strong></p>
            <br />
            <ul>
                <li>
                    Energy is defined by physicists as the capacity to do '
                    <a href=""#"" style=""color:black; font-weight:bold;"" title=""Work"" data-container=""body"" data-toggle=""popover"" data-placement=""top""
                       data-content=""A technical way to say moving something from one place to another."" data-original-title=""Work""
                       aria-describedby=""popover168466"">work</a>'
                </li>
                <li>
                    Energy cannot be created or destroyed, but transformed from one form to another.
                </li>
                <li>
                    Energy is measured in
                    <a href=""#"" style=""color:black; font-weight:bold;"" ti");
            WriteLiteral(@"tle=""Joule"" data-container=""body"" data-toggle=""popover"" data-placement=""top""
                       data-content=""Named after a scientist - James Prescott Joule. Remember, a joule is
                   a unit of energy. Scientists use the capital letter J as a symbol.""
                       data-original-title=""Joules"" aria-describedby=""popover168466"">Joules</a>
                </li>
                <li>
                    1 joule of energy can be expended by a human when lifting an apple 1 metre
                    in the air.
                </li>
                <li>
                    The most widely believed theory is that the big bang created all the energy around us today.
                </li>
                <li>
                    Most of the energy available to us on the planet has come from the Sun, which showers us with energy everyday.
                </li>
                <li>
                    Life forms have exploited the energy from the sun. We rely on these organisms t");
            WriteLiteral("o give us energy as well.\r\n                </li>\r\n                <li>\r\n                    We need energy to do work.\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n    ");
            EndContext();
            BeginContext(13297, 88, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ccb706a4c3bb461880a3dd647ec90ed4", async() => {
                BeginContext(13361, 20, true);
                WriteLiteral("Back to lessons list");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Area = (string)__tagHelperAttribute_3.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Controller = (string)__tagHelperAttribute_4.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_4);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Action = (string)__tagHelperAttribute_5.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_5);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(13385, 10, true);
            WriteLiteral("\r\n</div>\r\n");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
